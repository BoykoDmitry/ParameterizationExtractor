// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 16.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace Quipu.ParameterizationExtractor.Logic.Templates
{
    using System.Globalization;
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using Quipu.ParameterizationExtractor.Logic.Model;
    using Quipu.ParameterizationExtractor.Logic.Helpers;
    using Quipu.ParameterizationExtractor.Logic.Interfaces;
    using ParameterizationExtractor;
    using Microsoft.Extensions.Logging;
    using System.Reflection;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public partial class DefaultTemplate : DefaultTemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write("  \r\n");
            this.Write("/*\r\nAutogenerated by excavator tool, version ");
            
            #line 18 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Assembly.GetExecutingAssembly().GetName().Version.ToString()));
            
            #line default
            #line hidden
            this.Write(" \r\n");
            
            #line 19 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(DateTime.Now.ToString()));
            
            #line default
            #line hidden
            this.Write("\r\nSource: ");
            
            #line 20 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Schema?.DataSource));
            
            #line default
            #line hidden
            this.Write(" \r\nDatabase: ");
            
            #line 21 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(Schema?.Database));
            
            #line default
            #line hidden
            this.Write(" \r\n*/ \r\n");
            
            #line 23 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
if (!String.IsNullOrEmpty(Config?.ResultingScriptOptions?.TargetDatabase))
{
	WriteLine("use {0}", Config?.ResultingScriptOptions?.TargetDatabase);
} 

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 29 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
if (DeleterNeeded) 
	{

            
            #line default
            #line hidden
            this.Write("/*\r\ncolumn + value\r\n\r\n@_table\r\nPKColumn|PKBinValue\r\n**\r\n**\r\n\r\nfor each row in @_t" +
                    "able\r\n- delete all children\r\n- delete row\r\n */\r\nif object_id(\'dbo.Deleter\', \'P\')" +
                    " is not null\r\nexec (\'drop procedure dbo.Deleter\')\r\ngo\r\nset ansi_nulls on\r\ngo\r\nse" +
                    "t quoted_identifier on\r\ngo\r\n\r\ncreate procedure dbo.Deleter\r\n  @Action\t\t\ttinyint " +
                    "= null\r\n, @TableName\t\tnvarchar(128)/*full qualified table name eg dbo.Users or a" +
                    "dm.Indexes. Without brackets [ ] */\r\n, @ColumnName\t\tnvarchar(128)\r\n, @ColumnBinV" +
                    "alue\tvarbinary(512)/*converted to nvarchar value*/\r\n, @IsDebug\t\ttinyint = 0 /*0-" +
                    "prod, 1-noexec, 2-extended msgs*/\r\n, @Err_msg\t\tnvarchar(2048) = null output\r\n, @" +
                    "Err_nmbr\t\tint = 0 output\r\n/*with recompile*/\r\nas\r\n--#region changes description\r" +
                    "\n/*\r\n* Created by <ezhovea>; CreationDate <21.11.2020>\r\n* Modifications:\r\n* 1: A" +
                    "uthor <ezhovea>; ModificationDate <20200212>;\r\n*\t@TablesToExclude added\r\n*\t\t...\r" +
                    "\n*/\r\n--#endregion\r\n--#region called by\r\n/* -- list or modules, from which sp\'s c" +
                    "alling\r\n* \r\n* */\r\n--#endregion\r\nset nocount on;\r\n-- set xact_abort on;\r\n-- set f" +
                    "mtonly off;\r\n--#region Local variables\r\ndeclare\r\n  @_TranCount\ttinyint\r\n, @_Err_" +
                    "svrt\tint\r\n, @_ProcName\tsysname\r\n, @_msg\t\t\tnvarchar(2048)\r\n\r\n, @_stmt\t\tnvarchar(m" +
                    "ax)\r\n, @_object_id\tint\r\n, @_PKColumnName\tnvarchar(128)\r\n, @_PKSysTypeId\ttinyint\r" +
                    "\n, @_Delimiter\tnchar(1)\r\n, @_ReferencedTableName\tnvarchar(128)\r\n, @_ReferencedCo" +
                    "lumn\tnvarchar(128)\r\n, @_cPKBinValue\tvarbinary(512)\r\n, @_id int\r\n\r\n;\r\nselect\r\n  @" +
                    "_TranCount\t= @@TRANCOUNT\r\n, @_ProcName\t= object_name(@@PROCID)\r\n, @IsDebug\t\t= is" +
                    "null(@IsDebug, 0)\r\n, @_Delimiter\t= N\';\'\r\n--#endregion\r\nbegin\r\n\tbegin try\r\n\tif @I" +
                    "sDebug > 0\r\n\tbegin\r\n\t\tselect @_msg = replicate(\'- \', @@NESTLEVEL)\r\n\t\t\t+ @_ProcNa" +
                    "me + \' has started; @TableName=\'\r\n\t\t\t+ @TableName + \'; @ColumnName=\'\r\n\t\t\t+ @Colu" +
                    "mnName + \'; @ColumnValue=\'\r\n\t\t\t+ convert(nvarchar(512), @ColumnBinValue, 1);\r\n\t\t" +
                    "set @_msg = isnull(@_msg, \'null\')\r\n\t\traiserror (@_msg, 10, 1) with nowait;\r\n\tend" +
                    ";\r\n\tif (@_TranCount = 0) begin transaction;\r\n\t\t\r\n--#region checks and init\r\n\t\tse" +
                    "lect @_object_id = object_id(@TableName);\r\n\t\tif @_object_id is null\r\n\t\tbegin\r\n\t\t" +
                    "\tselect @_msg = replicate(\'- \', @@NESTLEVEL) + N\'Cannot find an object \' + isnul" +
                    "l(@TableName, \'null\');\r\n\t\t\traiserror (@_msg, 15, 1) with nowait;\r\n\t\tend;\r\n\r\n\t\tif" +
                    " @IsDebug > 0\r\n\t\tbegin\r\n\t\t\tselect @_msg = replicate(\'- \', @@NESTLEVEL) + \'@_obje" +
                    "ct_id = \' + isnull(cast(@_object_id as nvarchar(2048)), \'null\');\r\n\t\t\traiserror (" +
                    "@_msg, 10, 1) with nowait;\r\n\t\tend;\r\n\r\n\t\tselect top (1)\r\n\t\t  @_PKColumnName = c.[" +
                    "name]\r\n\t\t, @_PKSysTypeId = t.system_type_id\r\n\t\tfrom sys.objects o\r\n\t\tinner join " +
                    "sys.indexes i on i.[object_id] = o.[object_id]\r\n\t\tinner join sys.index_columns i" +
                    "c on ic.[object_id] = i.[object_id]\r\n\t\t\tand ic.index_id = i.index_id\r\n\t\t\tand ic." +
                    "is_included_column = 0\r\n\t\tinner join sys.[columns] c on c.[object_id] = ic.[obje" +
                    "ct_id]\r\n\t\t\tand ic.column_id = c.column_id\r\n\t\tinner join sys.types t on t.system_" +
                    "type_id = c.system_type_id\r\n\t\t\tand t.user_type_id = c.user_type_id\r\n\t\twhere\r\n\t\t\t" +
                    "o.[object_id] = @_object_id\r\n\t\tand o.[type] = \'U\' /*U-user table*/\r\n\t\tand i.[typ" +
                    "e] in (1, 2) /*1-Clustered,2-Nonclustered*/\r\n\t\tand\t(i.is_primary_key = 1\r\n\t\t\tor " +
                    "i.is_unique_constraint = 1\r\n\t\t\tor i.is_unique = 1\r\n\t\t)\r\n\t\tand i.is_disabled = 0\r" +
                    "\n\t\tand i.is_hypothetical = 0\r\n\t\tand i.filter_definition is null\r\n\t\tand \r\n\t\t(\r\n\t\t" +
                    "\tselect count(*) from sys.index_columns ic2\r\n\t\t\twhere ic2.[object_id] = i.[objec" +
                    "t_id]\r\n\t\t\tand ic2.index_id = i.index_id\r\n\t\t\tand ic2.is_included_column = 0\r\n\t\t) " +
                    "= 1 /*single-columns indexes only*/\r\n\t\torder by\r\n\t\t  ic.key_ordinal /*key_ordina" +
                    "l = 1 means that it is a leading column in index key */\r\n\t\t, case\r\n\t\t    when i." +
                    "is_primary_key = 1 then 10\r\n\t\t    when i.is_unique_constraint = 1 then 20\r\n\t\t   " +
                    " when i.is_unique = 1 then 30\r\n\t\t    when c.is_identity = 1 then 40\r\n\t\t    else " +
                    "99\r\n\t\tend\r\n\t\t\r\n\t\tif @_PKColumnName is null /*if there are no PK, UQ - try to use" +
                    " identity*/\r\n\t\tselect top (1) @_PKColumnName = c.[name]\r\n\t\tfrom sys.[columns] c\r" +
                    "\n\t\twhere c.[object_id] = @_object_id and c.is_identity = 1\r\n\t\t  \r\n\t\tif @_PKColum" +
                    "nName is null\r\n\t\tbegin\r\n\t\t\tselect @_msg = replicate(\'- \', @@NESTLEVEL) + N\'Canno" +
                    "t find a row identifier for table: \' + isnull(@TableName, \'null\');\r\n\t\t\traiserror" +
                    " (@_msg, 15, 1) with nowait;\r\n\t\tend;\r\n\t\t\r\n\t\tif @IsDebug > 0\r\n\t\tbegin\r\n\t\t\tselect " +
                    "@_msg = replicate(\'- \', @@NESTLEVEL) + \'@_PKColumnName = \' + isnull(@_PKColumnNa" +
                    "me, \'null\');\r\n\t\t\traiserror (@_msg, 10, 1) with nowait;\r\n\t\tend;\r\n--#endregion\r\n--" +
                    "#region #PKValues\r\n\t\t/*attempt to find an PK(UQ, identity, unique index for give" +
                    "n row)*/\r\n\t\tif object_id(\'tempdb..#PKValues\') is null\r\n\t\tbegin\r\n\t\t\tcreate table " +
                    "#PKValues\r\n\t\t\t( TableName\t\tnvarchar(128)\r\n\t\t\t, PKColumnName\tnvarchar(128)\r\n\t\t\t, " +
                    "PKBinValue\tvarbinary(512)\r\n\t\t\t, PK_SysTypeId\ttinyint\r\n\t\t\t, NestLevel\t\ttinyint\r\n\t" +
                    "\t\t, IsProcessed\tbit not null default(0)\r\n\t\t\t, _id\t\t\tint not null identity(1, 1)\r" +
                    "\n\t\t\t);\r\n\t\t\t\r\n\t\t\tselect * from sys.types t\r\n\t\t\tcreate clustered index ixC on #PKV" +
                    "alues(TableName, PKColumnName, _id);\r\n\t\tend;\r\n\t\t\r\n\t\tselect @_stmt =\r\n\'insert int" +
                    "o #PKValues(TableName, PKColumnName, PKBinValue, PK_SysTypeId, NestLevel)\r\nselec" +
                    "t \'\'\'+@TableName+\'\'\', \'\'\'+@_PKColumnName+\'\'\', cast(\'+@_PKColumnName+\' as varbina" +
                    "ry(512)), \'+cast(@_PKSysTypeId as nvarchar(max))+\', @@nestlevel\r\nfrom \'+@TableNa" +
                    "me+\' where cast(\'+@ColumnName+\' as varbinary(512)) = @p_PKBinValue\'\r\n\r\n\t\tif @IsD" +
                    "ebug > 0\r\n\t\t\traiserror (@_stmt, 10, 1) with nowait;\r\n\r\n\t\texec sp_executesql\r\n\t\t " +
                    " @stmt = @_stmt\r\n\t\t, @params = N\'@p_PKBinValue varbinary(512)\'\r\n\t\t, @p_PKBinValu" +
                    "e = @ColumnBinValue;\r\n--#endregion\r\n\r\n\t\tif @IsDebug = 1\r\n\t\t\tselect TableName, PK" +
                    "ColumnName, cast(PKBinValue as int) as binval, NestLevel , IsProcessed, _id\r\n\t\t\t" +
                    "  from #PKValues order by _Id\r\n\r\n\t\tdeclare @_curPK cursor\r\n\t\tset @_curPK = curso" +
                    "r local fast_forward for\r\n\t\t\tselect p.PKBinValue, p._id\r\n\t\t\tfrom #PKValues p\r\n\t\t" +
                    "\twhere p.TableName = @TableName\r\n\t\t\tand p.PKColumnName = @_PKColumnName\r\n\t\t\tand " +
                    "p.NestLevel = @@NESTLEVEL + 2 /*2 = (1 (procedure) + 1 (sp_executesql))*/\r\n\t\tope" +
                    "n @_curPK;\r\n\t\tfetch next from @_curPK into @_cPKBinValue, @_id\r\n\t\twhile @@fetch_" +
                    "status = 0\r\n\t\tbegin\r\n\t\t--#region delete children if exists\r\n\t\t\tif @IsDebug > 0\r\n" +
                    "\t\t\tbegin\r\n\t\t\t\tselect @_msg = replicate(\'- \', @@NESTLEVEL) + N\'delete children if" +
                    " exists for row: \'\r\n\t\t\t\t+ @_PKColumnName + \'=\' + convert(nvarchar(512), @_cPKBin" +
                    "Value, 1);\r\n\t\t\t\traiserror (@_msg, 10, 1) with nowait;\r\n\t\t\tend;\r\n\t\t\r\n\t\t\tdeclare @" +
                    "_curFK cursor\r\n\t\t\tset @_curFK = cursor local fast_forward for\r\n\t\t\t/*foreign keys" +
                    ", which refers to the mentioned column in the @TableName table*/\r\n\t\t\tselect\r\n\t\t\t" +
                    "  s.[name] + \'.\' + o.[name] as ChildTableName\r\n\t\t\t, c.[name] as ChildRefColumn\r\n" +
                    "\t\t\t/*  s_ref.[name] + \'.\' + o_ref.[name] as ReferencedTableName\r\n\t\t\t, c_ref.[nam" +
                    "e] as ReferencedColumn*/\r\n\t\t\tfrom sys.foreign_keys fk\r\n\t\t\tinner join sys.objects" +
                    " o on fk.parent_object_id = o.[object_id]\r\n\t\t\tinner join sys.schemas s on s.[sch" +
                    "ema_id] = o.[schema_id]\r\n\t\t\tinner join sys.foreign_key_columns fkc on fkc.constr" +
                    "aint_object_id = fk.[object_id]\r\n\t\t\tinner join sys.columns c on c.[object_id] = " +
                    "fkc.parent_object_id\r\n\t\t\t\tand c.column_id = fkc.parent_column_id\r\n\r\n\t\t\tinner joi" +
                    "n sys.objects o_ref on fk.referenced_object_id = o_ref.[object_id]\r\n\t\t\tinner joi" +
                    "n sys.schemas s_ref on s_ref.[schema_id] = o_ref.[schema_id]\r\n\t\t\tinner join sys." +
                    "foreign_key_columns fkc_ref on fkc_ref.constraint_object_id = fk.[object_id]\r\n\t\t" +
                    "\tinner join sys.columns c_ref on c_ref.[object_id] = fkc.referenced_object_id\r\n\t" +
                    "\t\t\tand c_ref.column_id = fkc.referenced_column_id\r\n\t\t\twhere o_ref.[object_id] = " +
                    "@_object_id\r\n\t\t\tand c_ref.[name] = @_PKColumnName\r\n\t\t\t/*and not exists(select * " +
                    "from @ListOfTablesToExclude LE where LE.TableName = s.[name] + \'.\' + o.[name])*/" +
                    "\r\n\t\t\topen @_curFK;\r\n\t\t\t\r\n\t\t\tfetch next from @_curFK into @_ReferencedTableName, " +
                    "@_ReferencedColumn\r\n\t\t\t\r\n\t\t\twhile @@fetch_status = 0\r\n\t\t\tbegin\r\n\t\t\t\r\n\t\t\t\texec db" +
                    "o.Deleter\r\n\t\t\t\t  @TableName = @_ReferencedTableName\r\n\t\t\t\t, @ColumnName = @_Refer" +
                    "encedColumn\r\n\t\t\t\t, @ColumnBinValue = @_cPKBinValue\r\n\t\t\t\t, @IsDebug = @IsDebug;\r\n" +
                    "\t\t\t\r\n\t\t\t\tfetch next from @_curFK into @_ReferencedTableName, @_ReferencedColumn\r" +
                    "\n\t\t\tend;\r\n\t\t\t\r\n\t\t\tclose @_curFK;\r\n\t\t\tdeallocate @_curFK;\r\n\t\t--#endregion\r\n\r\n\t\t\ts" +
                    "elect @_stmt =\r\n\t\t\t\'delete from \'+@TableName+\' where cast(\'+@_PKColumnName+\' as " +
                    "varbinary(512)) = @p_PKBinValue\'\r\n\t\t\tif @IsDebug > 0\r\n\t\t\t\tbegin\r\n\t\t\t\t\tselect @_m" +
                    "sg = \r\n\t\t\t\t\t\'delete from \'+@TableName+\' where \'+@_PKColumnName+\' = \'+\r\n\t\t\t\t\tcase" +
                    "\r\n\t\t\t\t\t\twhen @_PKSysTypeId in (35, 175, 231, 239, 231)\r\n\t\t\t\t\t\t\tthen \' \'\'\' + cast" +
                    "(@_cPKBinValue as nvarchar(max)) + \'\'\' \'\r\n\t\t\t\t\t\twhen @_PKSysTypeId in (48, 52, 5" +
                    "6) then \' \'\'\' + cast(cast(@_cPKBinValue as int) as nvarchar(2048)) + \'\'\' \'\r\n\t\t\t\t" +
                    "\t\twhen @_PKSysTypeId in (58, 61) then \' \'\'\' + cast(cast(@_cPKBinValue as datetim" +
                    "e) as nvarchar(2048)) + \'\'\' \'\r\n\t\t\t\t\t\telse \'@p_PKBinValue\'\r\n\t\t\t\t\tend\r\n\t\t\t\t\t\r\n\t\t\t\t" +
                    "\tselect @_msg = replicate(\'- \', @@NESTLEVEL) + \'delete row : \' + isnull(@_msg, \'" +
                    "null\');\r\n\t\t\t\t\traiserror (@_msg, 10, 1) with nowait;\r\n\t\t\t\tend;\r\n\t\t\tif @IsDebug !=" +
                    " 1\r\n\t\t\tbegin\r\n\t\t\t/*disable triggers*/\r\n\t\t\t\texec sp_executesql\r\n\t\t\t\t  @stmt = @_s" +
                    "tmt\r\n\t\t\t\t, @params = N\'@p_PKBinValue varbinary(512)\'\r\n\t\t\t\t, @p_PKBinValue = @_cP" +
                    "KBinValue;\r\n\t\t\t/*enable triggers back*/\r\n\t\t\tend;\r\n\t\t\tfetch next from @_curPK int" +
                    "o @_cPKBinValue, @_id\r\n\t\tend;\r\n\t\t\r\n\t\tclose @_curPK;\r\n\t\tdeallocate @_curPK;\t\t\r\n\r\n" +
                    "\tif (@_TranCount = 0) commit;\r\n\treturn isnull(@Err_nmbr, 0);\t\r\n\tend try\r\n--#regi" +
                    "on catch\r\n\tbegin catch\r\n\t\tselect\r\n\t\t  @Err_msg = isnull(error_message(), \'has no" +
                    "t been retrieved\')\r\n\t\t, @Err_nmbr = error_number()\r\n\t\t, @_Err_svrt = error_sever" +
                    "ity();\r\n\t\tif (@_TranCount = 0 and @@trancount > 0) rollback;\r\n\t\t-- print \'Catch " +
                    "section in module : \'+isnull(@_ProcName, \'Not defined\') + \' Error:\'+ @Err_msg;\r\n" +
                    "\t\tselect @Err_msg = \'Catch section in module: \'+isnull(@_ProcName, \'Not defined\'" +
                    ") + \' Error: \'+ @Err_msg;\r\n\t\traiserror (@Err_msg, @_Err_svrt, 1) with nowait;\r\n\t" +
                    "end catch;\r\n--#endregion\r\n\treturn isnull(@Err_nmbr, 0);\r\nend;\r\ngo\r\n\r\n");
            
            #line 337 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 
	}

            
            #line default
            #line hidden
            this.Write("\r\nGO\r\nset nocount on\r\ngo\r\nset ansi_nulls on\r\ngo\r\nset quoted_identifier on\r\ngo  \r\n" +
                    "\r\nbegin try\r\nbegin tran\r\n");
            
            #line 351 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 	
foreach (var record in Items.Where(_ => _.IsStartingPoint))
            {

            
            #line default
            #line hidden
            
            #line 355 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"


            
            #line default
            #line hidden
            this.Write("\t--#region ");
            
            #line 357 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(record.TableName));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 358 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

	if (record.SqlBuildStrategy.AsIsInserts)
	{

            
            #line default
            #line hidden
            this.Write("\talter table ");
            
            #line 362 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(record.TableName));
            
            #line default
            #line hidden
            this.Write(" disable trigger all\r\n");
            
            #line 363 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

    }
				//ProcessedItems = new List<PRecord>();
				ProcessOne(record, null, null);
	if (record.SqlBuildStrategy.AsIsInserts)
	{

            
            #line default
            #line hidden
            this.Write("\talter table ");
            
            #line 370 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(record.TableName));
            
            #line default
            #line hidden
            this.Write(" enable trigger all\r\n");
            
            #line 371 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("\t--#endregion ");
            
            #line 374 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(record.TableName));
            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 375 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

            }

            
            #line default
            #line hidden
            this.Write("\r\n");
            
            #line 379 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 if ((Config?.ResultingScriptOptions?.Rollback).GetValueOrDefault())
	WriteLine("rollback");
   else
	WriteLine("commit");

            
            #line default
            #line hidden
            this.Write(@"
end try
--#region catch
begin catch
	declare @Err_msg nvarchar(2048), @Err_svrt int
	select @Err_msg = isnull(error_message(), 'has not been retrieved'), @Err_svrt = error_severity();
	if @@trancount > 0 rollback;
	raiserror (@Err_msg, @Err_svrt, 1) with nowait;
end catch;

");
            
            #line 394 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
if (DeleterNeeded) 
	{

            
            #line default
            #line hidden
            this.Write("if object_id(\'dbo.Deleter\', \'P\') is not null\r\n\texec (\'drop procedure dbo.Deleter\'" +
                    ")\r\n");
            
            #line 399 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

	}

            
            #line default
            #line hidden
            this.Write("--#endregion\r\n\r\n\r\n");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 405 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 
	private T GetObjectFromSession<T>(string key)
		where T: class
	{
		object obj = null;
		this.Session.TryGetValue(key,out obj);

		return obj as T;
	}

	private IList<PRecord> ProcessedItems = new List<PRecord>();

	private IExtractConfiguration _config;
	private IExtractConfiguration Config
	{
		get {
			

			_config = _config ?? GetObjectFromSession<IExtractConfiguration>("config") ?? new GlobalExtractConfiguration();
			return _config;
		}
	}
	
	private bool DeleterNeeded
	{
		get {
			object b = false;
			this.Session.TryGetValue("DeleterNeeded",out b);

			return (bool)b;
		}
	}

	private ISourceSchema _schema;
	private ISourceSchema Schema
	{
		get {
			_schema = _schema ?? GetObjectFromSession<ISourceSchema>("schema") ?? new StubSourceSchema();

			return _schema;
		}
	} 

	private ILogger _log;
	private ILogger Log
	{
		get {
			_log = _log ?? GetObjectFromSession<ILogger>("log");

			return _log;
		}
	} 

	private IEnumerable<PRecord> _items;
	private IEnumerable<PRecord> Items
	{
		get {
			_items = _items ?? GetObjectFromSession<IEnumerable<PRecord>>("source") ?? new List<PRecord>();

			return _items;
		}
	} 

	void ProcessOne (PRecord item, PRecord parentRecord, PDependentTable FK, IList<PRecord> moves = null )
	{
		//Console.WriteLine("Process one entry:{0}, parentRecord:{1}",item.ToString(), parentRecord?.ToString());
		moves = moves ?? new List<PRecord>();
		if (moves.Any(_=>_.Equals(item)))
		{
			//Console.WriteLine("Shit hits the fan !");
			return;
		}

		moves.Add(item);

		
		if (item.Parents.Any())
		{
			//foreach(var parent in item.Parents)
			//	Console.WriteLine("item.Parent {0}", parent.PRecord);
								
			foreach(var parent in item.Parents)
			{						
				if (!ProcessedItems.Any(_=>_.Equals(parent.PRecord))
					&& !moves.Any(_=>_.Equals(parent.PRecord))
				)
				{
					Log.LogDebug("item.Parents, parentRecord:{0}",parent.PRecord?.ToString());
					if (parent.PRecord.SqlBuildStrategy.NoInserts)
					{
						if (parent.PRecord.SqlBuildStrategy.ThrowExecptionIfNotExists)
						{
							IfNotExists(parent.PRecord);
							
        
        #line default
        #line hidden
        
        #line 498 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tRAISERROR(\'Record from table ");

        
        #line default
        #line hidden
        
        #line 499 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.PRecord.TableName));

        
        #line default
        #line hidden
        
        #line 499 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" with unique values ");

        
        #line default
        #line hidden
        
        #line 499 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(SqlHelper.GetNameNormalValueString(parent.PRecord.GetUniqueFields())));

        
        #line default
        #line hidden
        
        #line 499 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" can not be found\', 16, 1) \r\n");

        
        #line default
        #line hidden
        
        #line 500 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

						}

						GenerateSqlForNoExtractionTable(parent.PRecord);						
					}
					else
					{
						//Console.WriteLine("I am going to print GenerateSqlForParent, parentRecord:{0} item {1}",parent.PRecord?.ToString(), item);						
						GenerateSqlForParent(parent.PRecord);						
					}
						
					//foreach(var c in parent.PRecord.Childern)
						//Console.WriteLine("parent.PRecord.Childern {0}", c.PRecord);

					foreach(var c in parent.PRecord.Childern.Where(_=>!moves.Any(t=>t.Equals(_.PRecord))))
					{
						//Console.WriteLine("Process parent children:{0}, parentRecord:{1}",c.PRecord.ToString(), parent.PRecord?.ToString());
						ProcessOne (c.PRecord, parent.PRecord, c.FK,moves);
					}
				}

				SqlHelper.PrepareFieldsForChild(item, parent.PRecord.GetPKVarName(), parent.FK);				
			}
		}

		if (parentRecord != null && FK != null)
			SqlHelper.PrepareFieldsForChild(item, parentRecord.GetPKVarName(), FK);


		GenerateSql(item,parentRecord,FK);

		foreach (var child in item.Childern.Where(_=>!moves.Any(t=>t.Equals(_.PRecord))))
		{
            ProcessOne(child.PRecord, item, child.FK, moves);
			Write("\n");
		}
	}

	void InsertValues(IEnumerable<PField> fields, string tableName)
	{

        
        #line default
        #line hidden
        
        #line 540 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tinsert into ");

        
        #line default
        #line hidden
        
        #line 541 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(tableName));

        
        #line default
        #line hidden
        
        #line 541 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" (");

        
        #line default
        #line hidden
        
        #line 541 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
Write(string.Join(",",fields.Select(_=>string.Format("[{0}]",_.FieldName))));
        
        #line default
        #line hidden
        
        #line 541 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(") \r\n\t\tvalues (");

        
        #line default
        #line hidden
        
        #line 542 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(string.Join(",",fields.Select(_=>_.ValueToSqlString()))));

        
        #line default
        #line hidden
        
        #line 542 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(")\r\n");

        
        #line default
        #line hidden
        
        #line 543 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

	}

	void IfNotExists(PRecord table)
	{
		if (!string.IsNullOrEmpty(table.GetUniqueSqlWhere()))
		{

        
        #line default
        #line hidden
        
        #line 550 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tif not exists(select * from ");

        
        #line default
        #line hidden
        
        #line 551 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(string.Format("{0} where {1}",table.TableName,table.GetUniqueSqlWhere())));

        
        #line default
        #line hidden
        
        #line 551 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" )\t\t\t\t\r\n");

        
        #line default
        #line hidden
        
        #line 552 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
		}
	else 
        
        #line default
        #line hidden
        
        #line 553 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t-- here should be something like if not exists, but unique columns(or values)" +
        " can not be found. \r\n");

        
        #line default
        #line hidden
        
        #line 555 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

	}
    
    void GenerateSqlForNoExtractionTable(PRecord parent)
	{
		if (!ProcessedItems.Any(_=>_.Equals(parent)))
			{
	
        
        #line default
        #line hidden
        
        #line 562 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tdeclare ");

        
        #line default
        #line hidden
        
        #line 563 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(string.Format("{0} {1}\n",parent.GetPKVarName(), parent.PkField.MetaData.SqlType)));

        
        #line default
        #line hidden
        
        #line 563 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\tselect ");

        
        #line default
        #line hidden
        
        #line 564 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 564 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 564 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 564 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\tfrom  ");

        
        #line default
        #line hidden
        
        #line 565 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.TableName));

        
        #line default
        #line hidden
        
        #line 565 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("  \r\n\t\twhere ");

        
        #line default
        #line hidden
        
        #line 566 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetUniqueSqlWhere()));

        
        #line default
        #line hidden
        
        #line 566 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\r\n");

        
        #line default
        #line hidden
        
        #line 567 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

		ProcessedItems.Add(parent);
		}		
	}

	void GenerateSqlForParent(PRecord parent)
	{
		if (!parent.GetUniqueFields().Any())
			Error("Can not generate sql without PK or unique combination");

		if (!ProcessedItems.Any(_=>_.Equals(parent)))
			{
			var fields = SqlHelper.NotIdentityFields(parent);

        
        #line default
        #line hidden
        
        #line 580 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tdeclare ");

        
        #line default
        #line hidden
        
        #line 581 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 Write(string.Format("{0} {1}\n",parent.GetPKVarName(), parent.PkField.MetaData.SqlType));
			
        
        #line default
        #line hidden
        
        #line 583 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
	if (parent.SqlBuildStrategy.DeleteExistingRecords) 
	{ 
	  
        
        #line default
        #line hidden
        
        #line 585 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\tdeclare ");

        
        #line default
        #line hidden
        
        #line 586 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 Write(string.Format("{0}_data {1}\n",parent.GetPKVarName(), parent.PkField.MetaData.SqlType));
        
        #line default
        #line hidden
        
        #line 586 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\tselect  ");

        
        #line default
        #line hidden
        
        #line 587 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 587 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("_data  = ");

        
        #line default
        #line hidden
        
        #line 587 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 587 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\tfrom ");

        
        #line default
        #line hidden
        
        #line 588 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.TableName));

        
        #line default
        #line hidden
        
        #line 588 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\r\n\twhere ");

        
        #line default
        #line hidden
        
        #line 589 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetUniqueSqlWhere()));

        
        #line default
        #line hidden
        
        #line 589 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\r\n\tdeclare ");

        
        #line default
        #line hidden
        
        #line 591 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 591 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("_valbinary varbinary(512)\r\n\tset ");

        
        #line default
        #line hidden
        
        #line 592 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 592 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("_valbinary = cast( ");

        
        #line default
        #line hidden
        
        #line 592 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 592 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("_data  as varbinary)\r\n\r\n\texec Deleter @TableName = \'");

        
        #line default
        #line hidden
        
        #line 594 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.TableName));

        
        #line default
        #line hidden
        
        #line 594 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\', @ColumnName=\'");

        
        #line default
        #line hidden
        
        #line 594 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 594 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\', @ColumnBinValue =  ");

        
        #line default
        #line hidden
        
        #line 594 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 594 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("_valbinary\r\n\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 597 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

	} 
        
        #line default
        #line hidden
        
        #line 600 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"


        
        #line default
        #line hidden
        
        #line 601 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t");

        
        #line default
        #line hidden
        
        #line 601 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
	IfNotExists(parent);

        
        #line default
        #line hidden
        
        #line 602 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\tbegin \r\n");

        
        #line default
        #line hidden
        
        #line 603 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

				if (parent.IsNumericPK)
				{
					if (parent.IsIdentityPK)
					{

						if (parent.SqlBuildStrategy.IdentityInsert)
							{

        
        #line default
        #line hidden
        
        #line 611 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\t\t    SET IDENTITY_INSERT ");

        
        #line default
        #line hidden
        
        #line 612 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.TableName));

        
        #line default
        #line hidden
        
        #line 612 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" ON; \r\n");

        
        #line default
        #line hidden
        
        #line 613 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

								InsertValues(parent,parent.TableName); 

        
        #line default
        #line hidden
        
        #line 615 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\t\t\t\t\t\tselect ");

        
        #line default
        #line hidden
        
        #line 616 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 616 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 616 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 616 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\t\t\t\t\t\tfrom ");

        
        #line default
        #line hidden
        
        #line 617 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.TableName));

        
        #line default
        #line hidden
        
        #line 617 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\t\t\t\t\t\twhere ");

        
        #line default
        #line hidden
        
        #line 618 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 618 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 618 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.PkField.Value));

        
        #line default
        #line hidden
        
        #line 618 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\r\n\t\t\t\t\tSET IDENTITY_INSERT ");

        
        #line default
        #line hidden
        
        #line 620 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.TableName));

        
        #line default
        #line hidden
        
        #line 620 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" OFF; \r\n");

        
        #line default
        #line hidden
        
        #line 621 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

							}
					    else 
							{

						InsertValues(fields,parent.TableName);

        
        #line default
        #line hidden
        
        #line 627 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tset ");

        
        #line default
        #line hidden
        
        #line 628 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 628 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = SCOPE_IDENTITY()\r\n");

        
        #line default
        #line hidden
        
        #line 629 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

						
							}
					}
					else 
					{

        
        #line default
        #line hidden
        
        #line 635 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\t\tselect ");

        
        #line default
        #line hidden
        
        #line 636 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 636 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = max(");

        
        #line default
        #line hidden
        
        #line 636 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 636 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(")+1 from ");

        
        #line default
        #line hidden
        
        #line 636 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.TableName));

        
        #line default
        #line hidden
        
        #line 637 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\r\n\t\t\t\tselect ");

        
        #line default
        #line hidden
        
        #line 638 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 638 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = isnull(");

        
        #line default
        #line hidden
        
        #line 638 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 638 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(", 1)\r\n\r\n\t\t");

        
        #line default
        #line hidden
        
        #line 640 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
InsertValues(SqlHelper.InjectSqlVariable(fields,parent.GetPKVarName(),parent.PkField.FieldName),parent.TableName);				
					}
				}
				else
				{
					InsertValues(fields,parent.TableName);

        
        #line default
        #line hidden
        
        #line 646 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tset ");

        
        #line default
        #line hidden
        
        #line 647 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 Write(parent.GetPKVarName());
        
        #line default
        #line hidden
        
        #line 647 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 647 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
Write(parent.PkField.ValueToSqlString());
				}

        
        #line default
        #line hidden
        
        #line 649 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\tend\r\n");

        
        #line default
        #line hidden
        
        #line 651 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 if (!parent.SqlBuildStrategy.DeleteExistingRecords) 
	{ 

        
        #line default
        #line hidden
        
        #line 653 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\telse \r\n\t\t\tbegin\r\n\t\t\t\tupdate ");

        
        #line default
        #line hidden
        
        #line 656 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.TableName));

        
        #line default
        #line hidden
        
        #line 656 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\t\tset ");

        
        #line default
        #line hidden
        
        #line 657 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(SqlHelper.GetNameValueForUpdateString(fields.Where(_ => !_.MetaData.IsPK))));

        
        #line default
        #line hidden
        
        #line 657 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\t\twhere ");

        
        #line default
        #line hidden
        
        #line 658 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetUniqueSqlWhere()));

        
        #line default
        #line hidden
        
        #line 658 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\r\n\t\t\t\tselect ");

        
        #line default
        #line hidden
        
        #line 660 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 660 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 660 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 660 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\t\tfrom ");

        
        #line default
        #line hidden
        
        #line 661 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.TableName));

        
        #line default
        #line hidden
        
        #line 661 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\t\twhere ");

        
        #line default
        #line hidden
        
        #line 662 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(parent.GetUniqueSqlWhere()));

        
        #line default
        #line hidden
        
        #line 662 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\r\n\t\t\tend \r\n");

        
        #line default
        #line hidden
        
        #line 665 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 } 
        
        #line default
        #line hidden
        
        #line 666 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"


			ProcessedItems.Add(parent);
			}
	}
 	
	void GenerateSql(PRecord child,PRecord parentRecord, PDependentTable FK)
	{
		if (!ProcessedItems.Any(_=>_.Equals(child)))
			{

		var fields = SqlHelper.NotIdentityFields(child);
		
		
        
        #line default
        #line hidden
        
        #line 680 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 if (!child.IsCompositePK) 
	{ 

        
        #line default
        #line hidden
        
        #line 682 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tdeclare ");

        
        #line default
        #line hidden
        
        #line 683 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 Write(string.Format("{0} {1}\n",child.GetPKVarName(), child.PkField.MetaData.SqlType));
        
        #line default
        #line hidden
        
        #line 684 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

	}

        
        #line default
        #line hidden
        
        #line 687 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
	if (child.SqlBuildStrategy.DeleteExistingRecords) 
	{ 
	  
        
        #line default
        #line hidden
        
        #line 689 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\tdeclare ");

        
        #line default
        #line hidden
        
        #line 690 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 Write(string.Format("{0}_data {1}\n",child.GetPKVarName(), child.PkField.MetaData.SqlType));
        
        #line default
        #line hidden
        
        #line 690 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\tselect ");

        
        #line default
        #line hidden
        
        #line 691 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 691 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("_data = ");

        
        #line default
        #line hidden
        
        #line 691 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 691 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\tfrom ");

        
        #line default
        #line hidden
        
        #line 692 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.TableName));

        
        #line default
        #line hidden
        
        #line 692 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\r\n\twhere ");

        
        #line default
        #line hidden
        
        #line 693 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetUniqueSqlWhere()));

        
        #line default
        #line hidden
        
        #line 693 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\r\n\tdeclare ");

        
        #line default
        #line hidden
        
        #line 695 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 695 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("_valbinary varbinary(512)\r\n\tset ");

        
        #line default
        #line hidden
        
        #line 696 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 696 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("_valbinary = cast( ");

        
        #line default
        #line hidden
        
        #line 696 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 696 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("_data  as varbinary)\r\n\r\n\texec Deleter @TableName = \'");

        
        #line default
        #line hidden
        
        #line 698 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.TableName));

        
        #line default
        #line hidden
        
        #line 698 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\', @ColumnName=\'");

        
        #line default
        #line hidden
        
        #line 698 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 698 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\', @ColumnBinValue =  ");

        
        #line default
        #line hidden
        
        #line 698 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 698 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("_valbinary\r\n\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 701 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

	} 
        
        #line default
        #line hidden
        
        #line 702 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\r\n");

        
        #line default
        #line hidden
        
        #line 703 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
		if (child.IsStartingPoint
			&& !string.IsNullOrEmpty(child.GetUniqueSqlWhere()))
		{ 
			IfNotExists(child);

        
        #line default
        #line hidden
        
        #line 707 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tbegin\r\n");

        
        #line default
        #line hidden
        
        #line 709 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

		}
		else if (child.UniqueFields.Any())
		{
        
        #line default
        #line hidden
        
        #line 712 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\tif not exists(select * from ");

        
        #line default
        #line hidden
        
        #line 713 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(string.Format("{0} where {1}",child.TableName,child.GetUniqueSqlWhere())));

        
        #line default
        #line hidden
        
        #line 713 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" ) \r\n\t\t\tbegin\r\n");

        
        #line default
        #line hidden
        
        #line 715 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

		}

		if (!child.PkField.MetaData.IsIdentity
					&& child.IsNumericPK
						&& !child.SqlBuildStrategy.AsIsInserts) 
		{

        
        #line default
        #line hidden
        
        #line 722 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tselect ");

        
        #line default
        #line hidden
        
        #line 723 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 723 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = max(");

        
        #line default
        #line hidden
        
        #line 723 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 723 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(")+1 from ");

        
        #line default
        #line hidden
        
        #line 723 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.TableName));

        
        #line default
        #line hidden
        
        #line 724 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\r\n\t\tselect ");

        
        #line default
        #line hidden
        
        #line 725 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 725 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = isnull(");

        
        #line default
        #line hidden
        
        #line 725 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 725 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(", 1)\r\n\r\n");

        
        #line default
        #line hidden
        
        #line 727 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
InsertValues(SqlHelper.InjectSqlVariable(fields,child.GetPKVarName(),child.PkField.FieldName),child.TableName);
		}
		else if (child.PkField.MetaData.IsIdentity)
			{
				if (child.SqlBuildStrategy.IdentityInsert)
				{

        
        #line default
        #line hidden
        
        #line 733 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\t\t    SET IDENTITY_INSERT ");

        
        #line default
        #line hidden
        
        #line 734 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.TableName));

        
        #line default
        #line hidden
        
        #line 734 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" ON; \r\n");

        
        #line default
        #line hidden
        
        #line 735 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

					InsertValues(child,child.TableName);  

        
        #line default
        #line hidden
        
        #line 737 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\t\t\tselect ");

        
        #line default
        #line hidden
        
        #line 738 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 738 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 738 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 738 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\t\t\tfrom ");

        
        #line default
        #line hidden
        
        #line 739 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.TableName));

        
        #line default
        #line hidden
        
        #line 739 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\t\t\twhere ");

        
        #line default
        #line hidden
        
        #line 740 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 740 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 740 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.PkField.Value));

        
        #line default
        #line hidden
        
        #line 740 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\r\n\t\t\t\t\tSET IDENTITY_INSERT ");

        
        #line default
        #line hidden
        
        #line 742 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.TableName));

        
        #line default
        #line hidden
        
        #line 742 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" OFF; \r\n");

        
        #line default
        #line hidden
        
        #line 743 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

				}
				else 
				{
					InsertValues(fields,child.TableName); 

        
        #line default
        #line hidden
        
        #line 749 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 if (!child.IsCompositePK) 
	{ 

        
        #line default
        #line hidden
        
        #line 751 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tset ");

        
        #line default
        #line hidden
        
        #line 752 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 752 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = SCOPE_IDENTITY()\r\n");

        
        #line default
        #line hidden
        
        #line 753 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

	}

        
        #line default
        #line hidden
        
        #line 756 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
  
				}
			}
			else
			{
				InsertValues(fields,child.TableName);
        
        #line default
        #line hidden
        
        #line 762 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 if (!child.IsCompositePK) 
	{ 

        
        #line default
        #line hidden
        
        #line 764 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tset ");

        
        #line default
        #line hidden
        
        #line 765 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 Write(child.GetPKVarName());
        
        #line default
        #line hidden
        
        #line 765 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 765 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
Write(child.PkField.ValueToSqlString());
	}
			}
	  if (child.IsStartingPoint
				&& !string.IsNullOrEmpty(child.GetUniqueSqlWhere()))
		{ 			

        
        #line default
        #line hidden
        
        #line 771 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\r\n\t\tend\r\n\telse \r\n");

        
        #line default
        #line hidden
        
        #line 775 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 if (!child.SqlBuildStrategy.ThrowExecptionIfNotExists && !child.SqlBuildStrategy.DeleteExistingRecords)
	{
        
        #line default
        #line hidden
        
        #line 776 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tbegin\r\n\t\t\tupdate ");

        
        #line default
        #line hidden
        
        #line 778 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.TableName));

        
        #line default
        #line hidden
        
        #line 778 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\tset ");

        
        #line default
        #line hidden
        
        #line 779 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(SqlHelper.GetNameValueForUpdateString(fields.Where(_ => !_.MetaData.IsPK))));

        
        #line default
        #line hidden
        
        #line 779 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\twhere ");

        
        #line default
        #line hidden
        
        #line 780 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetUniqueSqlWhere()));

        
        #line default
        #line hidden
        
        #line 780 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n");

        
        #line default
        #line hidden
        
        #line 781 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 if (!child.IsCompositePK) 
	{ 

        
        #line default
        #line hidden
        
        #line 783 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\tselect ");

        
        #line default
        #line hidden
        
        #line 784 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 784 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 784 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 784 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\tfrom ");

        
        #line default
        #line hidden
        
        #line 785 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.TableName));

        
        #line default
        #line hidden
        
        #line 785 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\twhere ");

        
        #line default
        #line hidden
        
        #line 786 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetUniqueSqlWhere()));

        
        #line default
        #line hidden
        
        #line 786 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n");

        
        #line default
        #line hidden
        
        #line 787 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

	}

        
        #line default
        #line hidden
        
        #line 789 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tend \r\n");

        
        #line default
        #line hidden
        
        #line 791 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 }
	else 
	{

        
        #line default
        #line hidden
        
        #line 794 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\tRAISERROR(\'Record from table ");

        
        #line default
        #line hidden
        
        #line 795 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.TableName));

        
        #line default
        #line hidden
        
        #line 795 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" with unique values ");

        
        #line default
        #line hidden
        
        #line 795 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(SqlHelper.GetNameNormalValueString(child.GetUniqueFields())));

        
        #line default
        #line hidden
        
        #line 795 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" is already in DB, can not insert!\', 16, 1) \t\r\n");

        
        #line default
        #line hidden
        
        #line 796 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

	}

		}
		else 
			if (child.UniqueFields.Any())
			{
				WriteLine("			End ");
				
        
        #line default
        #line hidden
        
        #line 805 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
 if (!child.IsCompositePK) 
	{ 

        
        #line default
        #line hidden
        
        #line 807 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write("\t\t\tselect ");

        
        #line default
        #line hidden
        
        #line 808 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetPKVarName()));

        
        #line default
        #line hidden
        
        #line 808 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" = ");

        
        #line default
        #line hidden
        
        #line 808 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.PkField.FieldName));

        
        #line default
        #line hidden
        
        #line 808 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\tfrom ");

        
        #line default
        #line hidden
        
        #line 809 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.TableName));

        
        #line default
        #line hidden
        
        #line 809 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\twhere ");

        
        #line default
        #line hidden
        
        #line 810 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(this.ToStringHelper.ToStringWithCulture(child.GetUniqueSqlWhere()));

        
        #line default
        #line hidden
        
        #line 810 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"
this.Write(" \r\n\t\t\t\t");

        
        #line default
        #line hidden
        
        #line 811 "C:\vsts\SQL Buldozer\ParameterizationExtractor.Logic\Templates\DefaultTemplate.tt"

	  }
			}
	  WriteLine("");
	  ProcessedItems.Add(child);
	  }
	}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "16.0.0.0")]
    public class DefaultTemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
